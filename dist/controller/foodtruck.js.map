{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodtruck","name","body","typeOfFood","price","save","err","send","json","message","findById","params","id","foodtruck","newReview","title","text","_id","review","reviews","push","get","find","foodtrucks","delete","remove"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Router } from \"express\";\nimport Foodtruck from \"../model/foodtruck\";\nimport Review from \"../model/review\";\nimport bodyParser from \"body-parser\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  // On met les routes et mÃ©thodes\n\n  // 'v1/foodtruck/add' Create a foodtruck\n  api.post(\"/add\", (req, res) => {\n    let newFoodtruck = new Foodtruck();\n    newFoodtruck.name = req.body.name;\n    newFoodtruck.typeOfFood = req.body.typeOfFood;\n    newFoodtruck.price = req.body.price;\n\n    newFoodtruck.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({\n        message: \"Foodtruck saved successfully\"\n      });\n    });\n  });\n\n// 'v1/foodtruck/reviews/add/:id' Add a review by id\n  api.post('/reviews/add/:id', (req, res) => {\n     Foodtruck.findById(req.params.id, (err, foodtruck) => {\n       if (err) {\n         res.send(err);\n       }\n       let newReview = new Review();\n\n       newReview.title = req.body.title;\n       newReview.text = req.body.text;\n       newReview.foodtruck = foodtruck._id;\n       newReview.save((err, review) => {\n         if (err) {\n           res.send(err);\n         }\n         foodtruck.reviews.push(newReview);\n         foodtruck.save(err => {\n           if (err) {\n             res.send(err);\n           }\n           res.json({ message: 'Foodtruck review saved' });\n         });\n       });\n     });\n   });\n  // 'v1/foodtruck' Get All Foodtrucks\n  api.get(\"/\", (req, res) => {\n    Foodtruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n  //'v1/foodtruck/:id' Get a foodtruck by id\n  api.get(\"/:id\", (req, res) => {\n    Foodtruck.findById({_id: req.params.id}, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n\n// 'v1/foodtruck/reviews/:id'  Get review by Id\n\napi.get(\"/reviews/:id\", (req, res) => {\n  Review.findById({ foodtruck: req.params.id}, (err, reviews) => {\n    if(err) {\n      res.send(err);\n    }\n    res.json(reviews);\n  })\n});\n\n\n// 'v1/foodtruck/delete/:id'\napi.delete('/:id', (req, res) => {\n   Foodtruck.remove({_id: req.params.id}, (err, foodtruck) => {\n     if (err) {\n       res.send(err);\n     }\n     Review.remove({foodtruck: req.params.id}, (err, review) => {\n       if (err) {\n         res.send(err);\n       }\n       res.json({message: \"Foodtruck and Reviews Successfully Removed\"});\n     });\n   });\n });\n  return api;\n};\n"]}